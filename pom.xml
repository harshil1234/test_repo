<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2015 Cloudera, Inc. All rights reserved. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cloudera.edh</groupId>
  <artifactId>haproxy</artifactId>
  <packaging>jar</packaging>
  <version>1.6.0-SNAPSHOT</version>
  <name>haproxy package</name>
  <url>http://cloudera.com</url>

  <scm>
    <connection>scm:git:git://github.mtv.cloudera.com/CDH/edh-validation.git</connection>
    <developerConnection>scm:git:http://github.mtv.cloudera.com/CDH/edh-validation.git</developerConnection>
    <url>http://github.mtv.cloudera.com/CDH/edh-validation</url>
  </scm>

  <issueManagement>
    <system>jira</system>
    <url>https://jira.cloudera.com/browse/KITCHEN</url>
  </issueManagement>

  <inceptionYear>2015</inceptionYear>

  <properties>
    <!-- Increment if the deployment requires uninstall/reinstall of CSD. -->
    <deploy.compatibility.generation>1</deploy.compatibility.generation>
    <cm.ext.validation.version>5.4</cm.ext.validation.version>
    <parcel.name>haproxy</parcel.name>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
    <version.java.min>1.7</version.java.min>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <includes>
          <include>descriptor/*</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <excludes>
          <exclude>parcel-meta/*</exclude>
          <exclude>descriptor/*</exclude>
        </excludes>
      </resource>
    </resources>
    <!-- Enforce java version -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <source>${version.java.min}</source>
          <target>${version.java.min}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <id>enforce-java</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>${version.java.min}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Confirm our data description works with the data generator -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.19</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.cloudera.enterprise</groupId>
        <artifactId>schema-validator-maven-plugin</artifactId>
        <version>5.4.3</version>
        <dependencies>
          <dependency>
            <groupId>com.cloudera.cmf.schema</groupId>
            <artifactId>cloudera-manager-schema</artifactId>
            <version>5.4.0</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>validate-schema</id>
            <phase>test</phase>
            <goals>
              <goal>validate</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.build.outputDirectory}</sourceDirectory>
              <strictMode>true</strictMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <pluginRepositories>
    <pluginRepository>
      <id>com.cloudera.releases</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <id>create-parcel</id>
      <dependencies>
        <!-- We need this at compile scope because plugin dependencies don't work with exec:exec -->
        <dependency>
            <groupId>com.cloudera.enterprise</groupId>
            <artifactId>schema-validator-maven-plugin</artifactId>
            <version>${cm.ext.validation.version}.0</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.7</version>
            <executions>
              <execution>
                <id>filter-parcel-meta</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/parcel-meta</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/resources/parcel-meta</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>copy-ha-proxy</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>haproxy-1.6.2</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>copy-pcre</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>pcre-8.37</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>2.2.1</version>
            <executions>
              <execution>
                <id>make-parcel</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptor>src/main/assembly/parcel-el6.xml</descriptor>
                  <finalName>${parcel.name}-${project.version}</finalName>
                  <attach>false</attach>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- This must be before the exec-maven-plugin so that in the package phase
               the 'name-parcel' execution will go before the 'generate-parcel-repo-manifest'
               execution.
            -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>name-parcel</id>
                <phase>package</phase>
                <goals>
                    <goal>run</goal>
                </goals>
                <configuration>
                    <tasks>
                        <move file="${project.build.directory}/${parcel.name}-${project.version}-el6.tar.gz" tofile="${project.build.directory}/${parcel.name}-${project.version}-el6.parcel" />
                    </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <!-- Verify that our parcel metadata is correct -->
              <execution>
                <id>validate-parcel-meta</id>
                <phase>test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <classpathScope>compile</classpathScope>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath>
                      <dependency>com.cloudera.enterprise:schema-validator</dependency>
                    </classpath>
                    <argument>com.cloudera.cli.validator.Main</argument>
                    <argument>--parcel-json</argument>
                    <argument>${project.build.directory}/parcel-meta/parcel.json</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Scan for parcels and make an appropriate manifest -->
              <execution>
                <id>generate-parcel-repo-manifest</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>python</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>
                    <argument>${project.build.directory}/make_manifest.py</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Verify our final parcel is correct -->
              <execution>
                <id>validate-parcel-file</id>
                <phase>verify</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <classpathScope>compile</classpathScope>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath>
                      <dependency>com.cloudera.enterprise:schema-validator</dependency>
                    </classpath>
                    <argument>com.cloudera.cli.validator.Main</argument>
                    <argument>-f</argument>
                    <argument>${project.build.directory}/${parcel.name}-${project.version}-el6.parcel</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Verify our manifest is correct -->
              <execution>
                <id>validate-parcel-repo-manifest</id>
                <phase>verify</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <classpathScope>compile</classpathScope>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath>
                      <dependency>com.cloudera.enterprise:schema-validator</dependency>
                    </classpath>
                    <argument>com.cloudera.cli.validator.Main</argument>
                    <argument>--manifest-json</argument>
                    <argument>${project.build.directory}/manifest.json</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.9.1</version>
            <executions>
              <execution>
                <id>attach-parcel</id>
                <phase>package</phase>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <configuration>
                  <artifacts>
                    <artifact>
                      <file>${parcel.name}-${project.version}-el6.parcel</file>
                      <type>parcel</type>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>download-parcel-repo-maker</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>download-single</goal>
                </goals>
                <configuration>
                  <url>https://raw.githubusercontent.com</url>
                  <fromFile>cloudera/cm_ext/cm5-${cm.ext.validation.version}/make_manifest/make_manifest.py</fromFile>
                  <toDir>${project.build.directory}</toDir>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>